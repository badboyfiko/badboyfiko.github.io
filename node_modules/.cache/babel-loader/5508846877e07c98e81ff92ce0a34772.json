{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/filipsulik/work/testform/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/filipsulik/work/testform/src/components/SmallCheckList.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    background-color: \", \";\\n  \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  height: 20px;\\n  width: 20px;\\n  border: 2px solid \", \";\\n  margin-right: 10px;\\n  flex-shrink: 0;\\n  \", \"\\n  &::after {\\n    position: absolute;\\n    top: 3px;\\n    left: 6px;\\n    content: '';\\n    line-height: 1;\\n    color: white;\\n    font-size: 14px;\\n    font-weight: bold;\\n    border-right: 2px solid white;\\n    border-bottom: 2px solid white;\\n    height: 10px;\\n    width: 5px;\\n    transform: rotate(45deg);\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  margin: 0;\\n  line-height: 1.2;\\n  text-align: left;\\n  \", \"\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport { Row, Cell, Flex } from './layout';\nimport styled, { css } from 'styled-components';\nimport { fontSize } from 'styled-system';\nconst Option = styled.p(_templateObject(), props => props.theme.colors.darkBlue, fontSize);\nconst CheckBox = styled.div(_templateObject2(), props => props.theme.colors.green, props => props.selected && css(_templateObject3(), props => props.theme.colors.green));\nconst OptionWrapper = styled(Flex).attrs(() => ({\n  height: 40,\n  alignItems: 'center'\n}))(_templateObject4());\n\nconst CheckList = ({\n  items,\n  selected,\n  onChange,\n  numbers\n}) => React.createElement(Row, {\n  style: {\n    width: '100%'\n  },\n  justifyContent: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(Cell, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, items.slice(0, 7).map((item, i) => React.createElement(OptionWrapper, {\n  onClick: () => onChange(item),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, React.createElement(CheckBox, {\n  selected: selected.indexOf(item) !== -1,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), numbers && React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(Option, {\n  fontSize: [12, 14],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, i + 1, \".\"), \"\\xA0\"), React.createElement(Option, {\n  fontSize: [12, 14],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, item)))), React.createElement(Cell, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, items.slice(7, 14).map((item, i) => React.createElement(OptionWrapper, {\n  onClick: () => onChange(item),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, React.createElement(CheckBox, {\n  selected: selected.indexOf(item) !== -1,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}), numbers && React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, React.createElement(Option, {\n  fontSize: [12, 14],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}, i + 8, \".\"), \"\\xA0\"), React.createElement(Option, {\n  fontSize: [12, 14],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, item)))));\n\nexport default CheckList;","map":{"version":3,"sources":["/Users/filipsulik/work/testform/src/components/SmallCheckList.js"],"names":["React","Fragment","Row","Cell","Flex","styled","css","fontSize","Option","p","props","theme","colors","darkBlue","CheckBox","div","green","selected","OptionWrapper","attrs","height","alignItems","CheckList","items","onChange","numbers","width","slice","map","item","i","indexOf"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\nimport {Row, Cell, Flex} from './layout'\nimport styled, {css} from 'styled-components'\nimport {fontSize} from 'styled-system'\n\nconst Option = styled.p`\n  color: ${props => props.theme.colors.darkBlue};\n  margin: 0;\n  line-height: 1.2;\n  text-align: left;\n  ${fontSize}\n`\n\nconst CheckBox = styled.div`\n  position: relative;\n  height: 20px;\n  width: 20px;\n  border: 2px solid ${props => props.theme.colors.green};\n  margin-right: 10px;\n  flex-shrink: 0;\n  ${props => props.selected && css`\n    background-color: ${props => props.theme.colors.green};\n  `}\n  &::after {\n    position: absolute;\n    top: 3px;\n    left: 6px;\n    content: '';\n    line-height: 1;\n    color: white;\n    font-size: 14px;\n    font-weight: bold;\n    border-right: 2px solid white;\n    border-bottom: 2px solid white;\n    height: 10px;\n    width: 5px;\n    transform: rotate(45deg);\n  }\n`\n\nconst OptionWrapper = styled(Flex).attrs(() => ({height: 40, alignItems: 'center'}))`\n  cursor: pointer;\n`\n\nconst CheckList = ({items, selected, onChange, numbers}) => <Row style={{width: '100%'}} justifyContent=\"center\">\n    <Cell>\n        {items.slice(0, 7).map((item, i) => (\n            <OptionWrapper onClick={() => onChange(item)}>\n                <CheckBox selected={selected.indexOf(item) !== -1} />\n                {numbers &&\n                    <Fragment>\n                        <Option fontSize={[12, 14]}>{i + 1}.</Option>\n                        &nbsp;\n                    </Fragment>\n                }\n                <Option fontSize={[12, 14]}>{item}</Option>\n            </OptionWrapper>\n        ))}\n    </Cell>\n    {\n        <Cell>\n            {items.slice(7, 14).map((item, i) => (\n                <OptionWrapper onClick={() => onChange(item)}>\n                    <CheckBox selected={selected.indexOf(item) !== -1} />\n                    {numbers &&\n                    <Fragment>\n                        <Option fontSize={[12, 14]}>{i + 8}.</Option>\n                        &nbsp;\n                    </Fragment>\n                    }\n                    <Option fontSize={[12, 14]}>{item}</Option>\n                </OptionWrapper>\n            ))}\n        </Cell>\n    }\n</Row>\n\nexport default CheckList\n"]},"metadata":{},"sourceType":"module"}